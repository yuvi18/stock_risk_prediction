knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
install.packages("jsonlite", repos="https://cran.rstudio.com/")
library("jsonlite")
json_file <- 'https://datahub.io/core/s-and-p-500-companies/datapackage.json'
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
print(json_data$resources$name)
# print all tabular data(if exists any)
for(i in 1:length(json_data$resources$datahub$type)){
if(json_data$resources$datahub$type[i]=='derived/csv'){
path_to_file = json_data$resources$path[i]
data <- read.csv(url(path_to_file))
print(data)
}
}
json_file <- 'https://datahub.io/core/s-and-p-500-companies-financials/datapackage.json'
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
print(json_data$resources$name)
# print all tabular data(if exists any)
for(i in 1:length(json_data$resources$datahub$type)){
if(json_data$resources$datahub$type[i]=='derived/csv'){
path_to_file = json_data$resources$path[i]
data <- read.csv(url(path_to_file))
print(data)
}
}
setwd("~/Documents/Documents/Medeiros/UNT/research/stock_risk_prediction/Using_R")
knitr::opts_chunk$set(echo = TRUE)
set.seed(7)
# load the library
library(mlbench)
library(caret)
library(VIM)
library(Amelia)
library(zoo)
# read in embedding
filepath = '~/Documents/Documents/Medeiros/UNT/research/stock_risk_prediction/Using_R'
setwd(filepath)
embeddings <- read.csv('S&P 500 Embeddings.csv')
# read in NPF and trim data set
data <- read.csv('2018_Financial_Data.csv')
revenue_data <- subset(data, select = c(Symbol, Revenue, Revenue.Growth, Gross.Profit, Operating.Expenses, Operating.Income,SG.A.Expense,EBITDA.Margin,Total.current.assets,Net.Profit.Margin,Investments,grossProfitMargin,returnOnEquity,Investments))
# combine data sets
#df <- merge(embeddings, revenue_data, by="Symbol")
df <- merge(embeddings, data, by="Symbol")
dataset <- df[4:231]
dataset$Total.non.current.assets <- NULL
dataset$Total.non.current.liabilities <- NULL
dataset$returnOnAssets <- NULL
dataset$operatingCycle <- NULL
dataset$cashConversionCycle <- NULL
dataset$shortTermCoverageRatios <- NULL
dataset$Current.ratio <- NULL
dataset$ROIC <- NULL
dataset$Return.on.Tangible.Assets <- NULL
dataset$Working.Capital <- NULL
dataset$X10Y.Dividend.per.Share.Growth..per.Share. <- NULL
dataset$X10Y.Revenue.Growth..per.Share. <- NULL
dataset$X10Y.Operating.CF.Growth..per.Share. <- NULL
dataset$X10Y.Net.Income.Growth..per.Share. <- NULL
dataset$X10Y.Shareholders.Equity.Growth..per.Share. <- NULL
dataset$priceEarningsToGrowthRatio <- NULL
dataset$Net.Income...Discontinued.ops <- NULL
dataset$Preferred.Dividends <- NULL
dataset$Short.term.investments <- NULL
dataset$Class <- NULL
dataset$Net.Income...Non.Controlling.int <- NULL
dataset$Net.Income...Discontinued.ops <- NULL
dataset$priceCashFlowRatio <- NULL
dataset$priceFairValue <- NULL
dataset$ebtperEBIT <- NULL
dataset$niperEBT <- NULL
dataset$effectiveTaxRate <- NULL
dataset$returnOnCapitalEmployed <- NULL
dataset$nIperEBT <- NULL
dataset$fixedAssetTurnover <- NULL
dataset$eBTperEBIT <- NULL
dataset$cashFlowToDebtRatio <- NULL
dataset$companyEquityMultiplier <- NULL
dataset$cashFlowCoverageRatios <- NULL
dataset$dividendPayoutRatio <- NULL
dataset$X5Y.Revenue.Growth..per.Share. <- NULL
dataset$X5Y.Operating.CF.Growth..per.Share. <- NULL
dataset$X5Y.Shareholders.Equity.Growth..per.Share. <- NULL
dataset$R.D.Expenses <- NULL
dataset$Long.term.investments <- NULL
dataset$Tax.assets <- NULL
dataset$Deferred.revenue <- NULL
dataset$Acquisitions.and.disposals <- NULL
dataset$Investment.purchases.and.sales <- NULL
dataset$Effect.of.forex.changes.on.cash <- NULL
dataset$operatingProfitMargin <- NULL
#dataset[] <- lapply(dataset, na.aggregate)
dataset <- lapply(dataset, na.aggregate)
dataset <- data.frame(dataset)
length(which(is.na(dataset)))
length(which(!complete.cases(dataset)))
summary(aggr(dataset[1:182]))
#dataset[] <- lapply(dataset, na.aggregate)
#dataset <- lapply(dataset, na.aggregate)
dataset <- data.frame(dataset)
summary(dataset)
dataset
dataset <- dataset[1:182]
dataset
dataset <- dataset[1:181]
dataset
dataset[,colSums(is.na(dataset))==0]
correlationMatrix <- cor(dataset)
# summarize the correlation matrix
#print(correlationMatrix)
# find attributes that are highly corrected (ideally >0.75)
highlyCorrelated <- findCorrelation(correlationMatrix, cutoff=0.5)
# print indexes of highly correlated attributes
print(highlyCorrelated)
importance
model
model2
